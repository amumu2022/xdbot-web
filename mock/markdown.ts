import { MockMethod } from "vite-plugin-mock";

export default [
  {
    url: "/get-api-course",
    method: "get",
    response: () => {
      return {
        success: true,
        data: '<p align="center" >\n  <a href="https://www.cnblogs.com/xdteam/"><img src="https://q1.qlogo.cn/g?b=qq&nk=651380741&s=640" width="200" height="200" alt="mumu" style="border-radius: 50%;"></a>\n</p>\n\n<div align="center">\n\n# XD-Admin\n\n👾 _XD-Admin 一款机器人后台管理工具_ 👾\n\n<p>version: 1.3.0</p>\n    \n</div>\n\n## 自定义 API 教学\n\n# 🎉 请求链接\n\n**如果你访问一些带`页数`的网址时，可能需要这个**\n\n```\nhttps://wallhaven.cc/random?page=【随机1-18000】\n```\n\n它能够实现你想实现的功能\n\n# 👏 触发语句\n\n**它只使用来捕获关键词，来触发自定义 API**\n\n# 🚢 超时时间\n\n**设定请求超时的时间，默认 10 秒，超时将返回请求超时**\n\n# 🚡 请求判断\n\n## 1、根据请求状态码进行判断\n\n当选择该项时，系统会根据此次请求的状态码进行判断，如`200`、`404`、`401`、`500`等，默认为`200`，即如果状态码不满足`200`，将会返回错误信息\n\n## 2、根据返回的 json 数据某键值进行判断\n\n当选择该项时，您需要在`判断属性`填入对应的键，在`判断值`填入对应的键值\n\n> 注意事项\n>\n> 如果返回的数据不是 json 格式的，将返回`数据类型错误`\n>\n> 如果设定的建在 json 数据不存在，将返回`属性错误`\n\n# 🍀 测试语句\n\n**当你设置的 api 需要`传入参数`时，可能需要这个**\n\n> 触发语句：QQ 头像\n>\n> 测试语句：QQ 头像#10001\n>\n> 接口地址：https://q1.qlogo.cn/g?b=qq&nk=#参数1&s=640\n\n最后链接会自动拼接\n\n```\nhttps://q1.qlogo.cn/g?b=qq&nk=10001&s=640\n```\n\n> 多个参数也可以哦\n>\n> 测试语句：QQ 头像#10#001\n>\n> 接口地址：https://q1.qlogo.cn/g?b=qq&nk=#参数1#参数2&s=640\n\n最后链接会自动拼接\n\n```\nhttps://q1.qlogo.cn/g?b=qq&nk=10001&s=640\n```\n\n同样的，如果你用到了`post参数`，在实际操作中，同样会把多个参数自动拼接\n\n# ✨ 匹配方式\n\n> **这是非常重要的内容了**\n\n**自定义 API 提供 `3` 种提取数据的方式**\n\n1. 正则\n2. JSON\n3. xpath\n\n直接上例子\n\n### 1、JSON 匹配\n\n> 普通状态\n\n```json\n{\n    "code": 200,\n    "msg": "成功",\n    "data": {\n        "songid": "001xd0HI0X9GNq",\n        "url": "http://y.qq.com/n/yqq/song/001xd0HI0X9GNq.html",\n        "singer": "周杰伦",\n        "song": "一路向北",\n        "picture": "http://y.qq.com/music/photo_new/T002R150x150M000002MAeob3zLXwZ.jpg"\n    }\n}\n```\n\n```\n状态：[XD:json,key=code]\n歌曲：[XD:json,key=data|song]\n图片：[XD:json,key=data|picture]\n```\n\n> 进阶，获取列表的数据\n\n```json\n{\n    "code": 200,\n    "msg": "成功",\n    "data": [\n        {\n            "top": 1,\n            "song": "浮光",\n            "music": "https://music.163.com/song/media/outer/url?id=2112196350",\n            "id": "2112196350"\n        },\n        {\n            "top": 2,\n            "song": "光合作用",\n            "music": "https://music.163.com/song/media/outer/url?id=2111993259",\n            "id": "2111993259"\n        },\n        {\n            "top": 3,\n            "song": "于斯为盛",\n            "music": "https://music.163.com/song/media/outer/url?id=2099624165",\n            "id": "2099624165"\n        }\n    ]\n}\n```\n\n```\n状态：[XD:json,key=code]\n歌曲：[XD:json,key=data|0|music]\n图片：[XD:json,key=data|随机|song]\n```\n\n- `0` 表示的是取第 1 个列表数据\n- `-1` 表示的是取倒数第 1 个列表数据\n- `随机` 表示的是取列表内随机一列数据\n- 在实际操作过程中，取随机时会在同一索引下取数据\n\n```\n状态：200\n歌曲：https://music.163.com/song/media/outer/url?id=2112196350\n图片：于斯为盛\n```\n\n### 2、正则匹配\n\n> `[XD:re,key1=1,key2=0]`\n>\n> 获取第 2 个匹配项的第 1 个数据\n>\n> `[XD:re,key1=随机,key2=0]`\n>\n> 获取随机匹配项的第 1 个数据\n>\n> `[XD:re,key1=1|2,key2=0]`\n>\n> 顺序遍历数据，获取`1-2`匹配项的第 1 个数据\n\n### 3、xpath\n\n> 最方便的爬虫方式之一，只需要在浏览器复制就行\n>\n> `[XD:xpath,key=xpath地址]`\n\n# 🏁 返回内容\n\n```\n<text content=[XD:re,key1=随机,key2=2]> # 文本\n<image content=[XD:re,key1=随机,key2=2]> # 图片\n<video content=[XD:re,key1=随机,key2=2]> # 视频\n<music content=[XD:re,key1=随机,key2=2]> # 音乐卡片\n<audio content=[XD:re,key1=随机,key2=2]> # 音频语音条\n<markdown content=[XD:re,key1=随机,key2=2]> # md消息\n<jsonCard content=[XD:re,key1=随机,key2=2]> # json卡片\n<xmlCard content=[XD:re,key1=随机,key2=2]> # xml卡片\n<record content=[XD:re,key1=随机,key2=2]> # 消息回复\n```\n\n### 1、返回原文文本\n\n**若我们仅仅需要请求 Api 后返回的原文数据，只需要填写：`【原文】`**\n例如：我们`获取QQ头像`\n\n```\n您的头像：\n<image content=【原文】>\n```\n\n这里原文就是返回的头像链接\n\n```\n您的头像：\n<image content=http://127.0.0.1:443/static/image/otime/EJ46-DXL4-PSTF-8J4Z.png>\n```\n\n### 2、返回视频\n\n例如：`获取美女视频`\n\n```\n视频来啦\n状态：[XD:json,key=msg]\n视频：<video content=[XD:json,key=data|url]>\n```\n\n返回结果\n\n```\n视频来啦\n状态：成功\n视频：<video content=http://v3-web.douyinvod.com/48d2a305fd2a3d0db0f36ea6854ec6f4/659d609d/video/tos/cn/tos-cn-ve-15/oIkAAgNzNIMN9nlAGxzkClceXBCAOhBpfQD2Eg>\n```\n\n### 3、返回图片\n\n例如：`获取美女图片`\n\n```\n图片来啦\n状态：[XD:json,key=msg]\n图片：<image content=[XD:json,key=data|img_url]>\n```\n\n返回结果\n\n```\n图片来啦\n状态：成功\n图片：<image content=https://p9-pc-sign.douyinpic.com/image-cut-tos-priv/78f3390074509cc823aa5b86d8401eec~tplv-dy-resize-origshort-autoq-75:330.jpeg?x-expires=2020168800&x-signature=OUFCl8bCjNh3bx8x1tMSa3JMTUc%3D&from=3213915784&s=PackSourceEnum_FEED&se=false&sc=cover&biz_tag=pcweb_cover&l=20240109220414EB887154543BE820EDB7>\n```\n\n### 4、返回音频\n\n例如：`获取随机音乐`\n\n```\n音频来啦\n状态：[XD:json,key=msg]\n歌名：[XD:json,key=data|song]\n音频：<audio content=[XD:json,key=data|music]>\n```\n\n返回结果\n\n```\n音频来啦\n状态：成功\n歌名：光合作用\n音频：<audio content=https://music.163.com/song/media/outer/url?id=2111993259>\n```\n\n### 5、对返回内容进行编码\n\n```\n<text content={FromURL text=[XD:re,key1=随机,key2=2]}>\n<image content={FromURL text=[XD:re,key1=随机,key2=2]}>\n<video content={FromURL text=[XD:re,key1=随机,key2=2]}>\n<music content={FromURL text=[XD:re,key1=随机,key2=2]}>\n<audio content={FromURL text=[XD:re,key1=随机,key2=2]}>\n<jsonCard content={FromURL text=[XD:re,key1=随机,key2=2]}>\n<xmlCard content={FromURL text=[XD:re,key1=随机,key2=2]}>\n# 是的，只有在这种情况下，才能返回内容解码\n```\n\n- ToURL_GBK\n- FromURL_GBK\n- ToUTF8\n- FromUTF8\n- ToURL\n- FromURL\n- ToGBK\n- FromGBK\n- `base64解码` FromBase64\n- 更多.......'
      };
    }
  }
] as MockMethod[];
